[gd_scene load_steps=4 format=2]

[ext_resource path="res://buttons/cards_up_button/cards_up_button.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

onready var animPlayer = $AnimationPlayer
onready var cardRes = load(\"res://card/card.tscn\")
var cardCount = 0
var rot = 0
var posX = 0
var rotSpacing = 20
var posXSpacing = 100

var cardSelected
var dragFinished = true
var tc

var draggingCard : Node
var selectedCard : Node

var cowering = false setget _set_cower

var oldRots = []

func _set_cower(value):
	if value != cowering:
		cowering = value
		if cowering:
			$holderPos/Tween.interpolate_property(
			$holderPos,
			\"rect_position\",
			$holderPos.rect_position,
			Vector2($holderPos.rect_position.x, $holderPos.rect_position.y + 650),
			0.3,
			Tween.TRANS_EXPO, Tween.EASE_OUT)
			$holderPos/Tween.start()
			
			for card in $holderPos.get_children():
				if card.is_in_group(\"card\") and self.has_node(card.get_path()):
					oldRots.append(card.rotation_degrees)
					card.get_node(\"Tween\").interpolate_property(
					card, \"rotation_degrees\",
					card.rotation_degrees, 0, 0.2,
					Tween.TRANS_CUBIC, Tween.EASE_OUT)
					
					card.get_node(\"Tween\").start()
			
		else:
			$holderPos/Tween.interpolate_property(
			$holderPos,
			\"rect_position\",
			$holderPos.rect_position,
			Vector2($holderPos.rect_position.x, $holderPos.rect_position.y - 650),
			0.3,
			Tween.TRANS_EXPO, Tween.EASE_OUT)
			
			if oldRots != []:
				var i = 0
				
				for card in $holderPos.get_children():
					if card.is_in_group(\"card\") and self.has_node(card.get_path()):
						card.get_node(\"Tween\").interpolate_property(
						card, \"rotation_degrees\",
						card.rotation_degrees, oldRots[i], 0.2,
						Tween.TRANS_CUBIC, Tween.EASE_OUT)
						
						card.get_node(\"Tween\").start()
						i += 1
		
		$holderPos/Tween.start()

func refresh():
	rot = 0
	posX = 0
	if cardCount == 1:
		rot = 0
	elif cardCount % 2 == 0:
		rot = -(cardCount*rotSpacing)/3
	else:
		rot = -(cardCount*rotSpacing)/2.5
	posX = -(cardCount*posXSpacing)/3 - 10*cardCount
	
	for card in $holderPos.get_children():
		if card.is_in_group(\"card\") and self.has_node(card.get_path()):
			card.get_node(\"Tween\").interpolate_property(
			card, \"position\",
			card.position, Vector2(posX, card.position.y), 0.3,
			Tween.TRANS_LINEAR, Tween.EASE_IN_OUT)
			
			card.get_node(\"Tween\").interpolate_property(
			card, \"rotation_degrees\",
			card.rotation_degrees, rot, 0.3,
			Tween.TRANS_CUBIC, Tween.EASE_IN_OUT)
			
			card.get_node(\"Tween\").start()
			
			rot += rotSpacing
			posX += posXSpacing

func _input(event):
	if Input.is_action_just_pressed(\"click\"):
		if tc != null:
			tc.queue_free()
			tc = null
		tc = load(\"res://card_holder/touch_collision/touch_collision.tscn\").instance()
		add_child(tc)
		tc.set_global_position(event.position)

func newCard(title, text, img, choiceID):
	var card = cardRes.instance()
	card.duplicate()
	card.holderLayer = cardCount
	card.z_index = cardCount
	$holderPos.add_child(card)
	card.global_position.y += 350
	card.setup(title, text, img, choiceID)
	cardCount += 1
	
	refresh()

func reset():
	dragFinished = true
	draggingCard = null
	get_parent().dropArea.shown = false
	for card in $holderPos.get_children():
		if card.is_in_group(\"card\"):
			card.queue_free()
	cardCount = 0

func _on_Tween_tween_all_completed():
	if cowering:
		$holderPos.rect_position.y =  382  + get_viewport_rect().size.y
	else:
		$holderPos.rect_position.y = -268  + get_viewport_rect().size.y

func _process(delta):
	$ColorRectLayer/ColorRect.rect_size = get_viewport_rect().size * 1.1
"

[sub_resource type="Animation" id=2]
resource_name = "fade"
length = 0.3
step = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRectLayer/ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( -2, -2 ),
"update": 0,
"values": [ Color( 0.109804, 0.0823529, 0.180392, 0 ), Color( 0.109804, 0.0823529, 0.180392, 0.941176 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRectLayer/ColorRect:mouse_filter")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 2, 0, 0 ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("ColorRectLayer/ColorRect")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.000634994 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "z", 99 ],
"method": "set"
} ]
}

[node name="CardHolder" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/fade = SubResource( 2 )

[node name="CardsUpButton" parent="." instance=ExtResource( 1 )]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -281.828
margin_top = -293.168
margin_right = -25.8284
margin_bottom = -37.168
rect_pivot_offset = Vector2( 130.565, 127.327 )

[node name="ColorRectLayer" type="Node2D" parent="."]
z_index = 99

[node name="ColorRect" type="ColorRect" parent="ColorRectLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0.109804, 0.0823529, 0.180392, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="holderPos" type="Control" parent="."]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = 6.10352e-05
margin_top = -268.0
margin_right = 6.10352e-05
margin_bottom = -268.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="holderPos"]

[connection signal="tween_all_completed" from="holderPos/Tween" to="." method="_on_Tween_tween_all_completed"]
